# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build .github/workflows/jekyll.yml
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-npm
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-


      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1 # v1.146.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      
      - name: Cloning remote repository
        run: >
          git clone https://github.com/Association-Mallouestan/docs.mallouestan.github.io ./_remote;
          
      - name: Copying drafts from the remote repository
        run: >
          cd ./_remote; git checkout brouillons; cd ..;
          find ./_remote -type f | while read file; do
            new_name=$(echo "$file" | sed -e 's|./_remote/||' -e 's|[/ ]|-|g')
            cp "$file" "./collections/_brouillons/$new_name"
          done;

      - name: Retrieving files for ressources collection
        run: >
          cd ./_remote; git checkout main; cd ..;
          find ./_remote/philosophie ./_remote/charte -type f | while read file; do
            new_name=$(echo "$file" | sed -e 's|./_remote/||' -e 's|[/ ]|-|g')
            cp "$file" "./collections/_ressources/$new_name"
          done;
          ls ./collections/_ressources;

      - name: Retrieving files for technical ressources collection
        run: >
          cd ./_remote; git checkout main; cd ..;
          find ./_remote/technique -type f | while read file; do
            new_name=$(echo "$file" | sed -e 's|./_remote/||' -e 's|[/ ]|-|g')
            cp "$file" "./collections/_ressources/$new_name"
          done;
          find ./_remote -mindepth 2 -maxdepth 2 -type d -name images | while read dir; do
              find "$dir" -type f | while read file; do
                  new_name=$(echo "$file" | sed -e 's|./_remote/||' -e 's|/images||' -e 's|[ ]|-|g')
                  new_folder=$(echo "$dir" | sed -e 's|./_remote/||' -e 's|/images||' -e 's|[ ]|-|g')
                  mkdir -p ./images/techniques/$new_folder
                  cp "$file" "./images/techniques/$new_name"
              done;
          done
          ls ./collections/_ressources;

      - name: Deleting remote files
        run: >
          rm -fr ./_remote

      - name: Webpack build
        run: npm exec webpack

      - name: Build Jekyll Site
        run: bundle exec jekyll build 
          # --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Adding run number to file for caching purposes
        # Outputs to the './_site' directory by default
        run: echo ${{ github.run_number }} > ./_site/id
          # --baseurl "${{ steps.pages.outputs.base_path }}"

      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
